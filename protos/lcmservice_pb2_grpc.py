# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import protos.lcmservice_pb2 as lcmservice__pb2


class LCMStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.instantiate = channel.unary_unary(
            "/lcmservice.LCM/instantiate",
            request_serializer=lcmservice__pb2.InstantiateRequest.SerializeToString,
            response_deserializer=lcmservice__pb2.InstantiateResponse.FromString,
        )
        self.terminate = channel.unary_unary(
            "/lcmservice.LCM/terminate",
            request_serializer=lcmservice__pb2.TerminateRequest.SerializeToString,
            response_deserializer=lcmservice__pb2.TerminateResponse.FromString,
        )
        self.uploadConfig = channel.stream_unary(
            "/lcmservice.LCM/uploadConfig",
            request_serializer=lcmservice__pb2.UploadCfgRequest.SerializeToString,
            response_deserializer=lcmservice__pb2.UploadCfgResponse.FromString,
        )
        self.removeConfig = channel.unary_unary(
            "/lcmservice.LCM/removeConfig",
            request_serializer=lcmservice__pb2.RemoveCfgRequest.SerializeToString,
            response_deserializer=lcmservice__pb2.RemoveCfgResponse.FromString,
        )
        self.uploadPackage = channel.stream_unary(
            "/lcmservice.LCM/uploadPackage",
            request_serializer=lcmservice__pb2.UploadPackageRequest.SerializeToString,
            response_deserializer=lcmservice__pb2.UploadPackageResponse.FromString,
        )
        self.deletePackage = channel.unary_unary(
            "/lcmservice.LCM/deletePackage",
            request_serializer=lcmservice__pb2.DeletePackageRequest.SerializeToString,
            response_deserializer=lcmservice__pb2.DeletePackageResponse.FromString,
        )


class LCMServicer(object):
    """Missing associated documentation comment in .proto file."""

    def instantiate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def terminate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def uploadConfig(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def removeConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def uploadPackage(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def deletePackage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_LCMServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "instantiate": grpc.unary_unary_rpc_method_handler(
            servicer.instantiate,
            request_deserializer=lcmservice__pb2.InstantiateRequest.FromString,
            response_serializer=lcmservice__pb2.InstantiateResponse.SerializeToString,
        ),
        "terminate": grpc.unary_unary_rpc_method_handler(
            servicer.terminate,
            request_deserializer=lcmservice__pb2.TerminateRequest.FromString,
            response_serializer=lcmservice__pb2.TerminateResponse.SerializeToString,
        ),
        "uploadConfig": grpc.stream_unary_rpc_method_handler(
            servicer.uploadConfig,
            request_deserializer=lcmservice__pb2.UploadCfgRequest.FromString,
            response_serializer=lcmservice__pb2.UploadCfgResponse.SerializeToString,
        ),
        "removeConfig": grpc.unary_unary_rpc_method_handler(
            servicer.removeConfig,
            request_deserializer=lcmservice__pb2.RemoveCfgRequest.FromString,
            response_serializer=lcmservice__pb2.RemoveCfgResponse.SerializeToString,
        ),
        "uploadPackage": grpc.stream_unary_rpc_method_handler(
            servicer.uploadPackage,
            request_deserializer=lcmservice__pb2.UploadPackageRequest.FromString,
            response_serializer=lcmservice__pb2.UploadPackageResponse.SerializeToString,
        ),
        "deletePackage": grpc.unary_unary_rpc_method_handler(
            servicer.deletePackage,
            request_deserializer=lcmservice__pb2.DeletePackageRequest.FromString,
            response_serializer=lcmservice__pb2.DeletePackageResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "lcmservice.LCM", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class LCM(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def instantiate(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/lcmservice.LCM/instantiate",
            lcmservice__pb2.InstantiateRequest.SerializeToString,
            lcmservice__pb2.InstantiateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def terminate(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/lcmservice.LCM/terminate",
            lcmservice__pb2.TerminateRequest.SerializeToString,
            lcmservice__pb2.TerminateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def uploadConfig(
        request_iterator,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            "/lcmservice.LCM/uploadConfig",
            lcmservice__pb2.UploadCfgRequest.SerializeToString,
            lcmservice__pb2.UploadCfgResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def removeConfig(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/lcmservice.LCM/removeConfig",
            lcmservice__pb2.RemoveCfgRequest.SerializeToString,
            lcmservice__pb2.RemoveCfgResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def uploadPackage(
        request_iterator,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            "/lcmservice.LCM/uploadPackage",
            lcmservice__pb2.UploadPackageRequest.SerializeToString,
            lcmservice__pb2.UploadPackageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def deletePackage(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/lcmservice.LCM/deletePackage",
            lcmservice__pb2.DeletePackageRequest.SerializeToString,
            lcmservice__pb2.DeletePackageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
